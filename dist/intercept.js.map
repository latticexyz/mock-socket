{"version":3,"sources":["../node_modules/requires-port/index.js","../node_modules/querystringify/index.js","../node_modules/url-parse/index.js","../src/intercept.ts","../src/helpers/delay.js","../src/helpers/logger.js","../src/helpers/array-helpers.js","../src/event/target.js","../src/network-bridge.js","../src/constants.js","../src/event/prototype.js","../src/event/event.js","../src/event/message.js","../src/event/close.js","../src/event/factory.js","../src/algorithms/close.js","../src/helpers/normalize-send.js","../src/helpers/proxy-factory.js","../src/helpers/byte-length.js","../src/helpers/url-verification.js","../src/helpers/protocol-verification.js","../src/websocket.js"],"sourcesContent":["'use strict';\n\n/**\n * Check if we're required to add a port number.\n *\n * @see https://url.spec.whatwg.org/#default-port\n * @param {Number|String} port Port number we need to check\n * @param {String} protocol Protocol we need to check against.\n * @returns {Boolean} Is it a default port for the given protocol\n * @api private\n */\nmodule.exports = function required(port, protocol) {\n  protocol = protocol.split(':')[0];\n  port = +port;\n\n  if (!port) return false;\n\n  switch (protocol) {\n    case 'http':\n    case 'ws':\n    return port !== 80;\n\n    case 'https':\n    case 'wss':\n    return port !== 443;\n\n    case 'ftp':\n    return port !== 21;\n\n    case 'gopher':\n    return port !== 70;\n\n    case 'file':\n    return false;\n  }\n\n  return port !== 0;\n};\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , undef;\n\n/**\n * Decode a URI encoded string.\n *\n * @param {String} input The URI encoded string.\n * @returns {String|Null} The decoded string.\n * @api private\n */\nfunction decode(input) {\n  try {\n    return decodeURIComponent(input.replace(/\\+/g, ' '));\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Attempts to encode a given input.\n *\n * @param {String} input The string that needs to be encoded.\n * @returns {String|Null} The encoded string.\n * @api private\n */\nfunction encode(input) {\n  try {\n    return encodeURIComponent(input);\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Simple query string parser.\n *\n * @param {String} query The query string that needs to be parsed.\n * @returns {Object}\n * @api public\n */\nfunction querystring(query) {\n  var parser = /([^=?#&]+)=?([^&]*)/g\n    , result = {}\n    , part;\n\n  while (part = parser.exec(query)) {\n    var key = decode(part[1])\n      , value = decode(part[2]);\n\n    //\n    // Prevent overriding of existing properties. This ensures that build-in\n    // methods like `toString` or __proto__ are not overriden by malicious\n    // querystrings.\n    //\n    // In the case if failed decoding, we want to omit the key/value pairs\n    // from the result.\n    //\n    if (key === null || value === null || key in result) continue;\n    result[key] = value;\n  }\n\n  return result;\n}\n\n/**\n * Transform a query string to an object.\n *\n * @param {Object} obj Object that should be transformed.\n * @param {String} prefix Optional prefix.\n * @returns {String}\n * @api public\n */\nfunction querystringify(obj, prefix) {\n  prefix = prefix || '';\n\n  var pairs = []\n    , value\n    , key;\n\n  //\n  // Optionally prefix with a '?' if needed\n  //\n  if ('string' !== typeof prefix) prefix = '?';\n\n  for (key in obj) {\n    if (has.call(obj, key)) {\n      value = obj[key];\n\n      //\n      // Edge cases where we actually want to encode the value to an empty\n      // string instead of the stringified value.\n      //\n      if (!value && (value === null || value === undef || isNaN(value))) {\n        value = '';\n      }\n\n      key = encode(key);\n      value = encode(value);\n\n      //\n      // If we failed to encode the strings, we should bail out as we don't\n      // want to add invalid strings to the query.\n      //\n      if (key === null || value === null) continue;\n      pairs.push(key +'='+ value);\n    }\n  }\n\n  return pairs.length ? prefix + pairs.join('&') : '';\n}\n\n//\n// Expose the module.\n//\nexports.stringify = querystringify;\nexports.parse = querystring;\n","'use strict';\n\nvar required = require('requires-port')\n  , qs = require('querystringify')\n  , CRHTLF = /[\\n\\r\\t]/g\n  , slashes = /^[A-Za-z][A-Za-z0-9+-.]*:\\/\\//\n  , protocolre = /^([a-z][a-z0-9.+-]*:)?(\\/\\/)?([\\\\/]+)?([\\S\\s]*)/i\n  , windowsDriveLetter = /^[a-zA-Z]:/\n  , whitespace = /^[\\x00-\\x20\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]+/;\n\n/**\n * Trim a given string.\n *\n * @param {String} str String to trim.\n * @public\n */\nfunction trimLeft(str) {\n  return (str ? str : '').toString().replace(whitespace, '');\n}\n\n/**\n * These are the parse rules for the URL parser, it informs the parser\n * about:\n *\n * 0. The char it Needs to parse, if it's a string it should be done using\n *    indexOf, RegExp using exec and NaN means set as current value.\n * 1. The property we should set when parsing this value.\n * 2. Indication if it's backwards or forward parsing, when set as number it's\n *    the value of extra chars that should be split off.\n * 3. Inherit from location if non existing in the parser.\n * 4. `toLowerCase` the resulting value.\n */\nvar rules = [\n  ['#', 'hash'],                        // Extract from the back.\n  ['?', 'query'],                       // Extract from the back.\n  function sanitize(address, url) {     // Sanitize what is left of the address\n    return isSpecial(url.protocol) ? address.replace(/\\\\/g, '/') : address;\n  },\n  ['/', 'pathname'],                    // Extract from the back.\n  ['@', 'auth', 1],                     // Extract from the front.\n  [NaN, 'host', undefined, 1, 1],       // Set left over value.\n  [/:(\\d*)$/, 'port', undefined, 1],    // RegExp the back.\n  [NaN, 'hostname', undefined, 1, 1]    // Set left over.\n];\n\n/**\n * These properties should not be copied or inherited from. This is only needed\n * for all non blob URL's as a blob URL does not include a hash, only the\n * origin.\n *\n * @type {Object}\n * @private\n */\nvar ignore = { hash: 1, query: 1 };\n\n/**\n * The location object differs when your code is loaded through a normal page,\n * Worker or through a worker using a blob. And with the blobble begins the\n * trouble as the location object will contain the URL of the blob, not the\n * location of the page where our code is loaded in. The actual origin is\n * encoded in the `pathname` so we can thankfully generate a good \"default\"\n * location from it so we can generate proper relative URL's again.\n *\n * @param {Object|String} loc Optional default location object.\n * @returns {Object} lolcation object.\n * @public\n */\nfunction lolcation(loc) {\n  var globalVar;\n\n  if (typeof window !== 'undefined') globalVar = window;\n  else if (typeof global !== 'undefined') globalVar = global;\n  else if (typeof self !== 'undefined') globalVar = self;\n  else globalVar = {};\n\n  var location = globalVar.location || {};\n  loc = loc || location;\n\n  var finaldestination = {}\n    , type = typeof loc\n    , key;\n\n  if ('blob:' === loc.protocol) {\n    finaldestination = new Url(unescape(loc.pathname), {});\n  } else if ('string' === type) {\n    finaldestination = new Url(loc, {});\n    for (key in ignore) delete finaldestination[key];\n  } else if ('object' === type) {\n    for (key in loc) {\n      if (key in ignore) continue;\n      finaldestination[key] = loc[key];\n    }\n\n    if (finaldestination.slashes === undefined) {\n      finaldestination.slashes = slashes.test(loc.href);\n    }\n  }\n\n  return finaldestination;\n}\n\n/**\n * Check whether a protocol scheme is special.\n *\n * @param {String} The protocol scheme of the URL\n * @return {Boolean} `true` if the protocol scheme is special, else `false`\n * @private\n */\nfunction isSpecial(scheme) {\n  return (\n    scheme === 'file:' ||\n    scheme === 'ftp:' ||\n    scheme === 'http:' ||\n    scheme === 'https:' ||\n    scheme === 'ws:' ||\n    scheme === 'wss:'\n  );\n}\n\n/**\n * @typedef ProtocolExtract\n * @type Object\n * @property {String} protocol Protocol matched in the URL, in lowercase.\n * @property {Boolean} slashes `true` if protocol is followed by \"//\", else `false`.\n * @property {String} rest Rest of the URL that is not part of the protocol.\n */\n\n/**\n * Extract protocol information from a URL with/without double slash (\"//\").\n *\n * @param {String} address URL we want to extract from.\n * @param {Object} location\n * @return {ProtocolExtract} Extracted information.\n * @private\n */\nfunction extractProtocol(address, location) {\n  address = trimLeft(address);\n  address = address.replace(CRHTLF, '');\n  location = location || {};\n\n  var match = protocolre.exec(address);\n  var protocol = match[1] ? match[1].toLowerCase() : '';\n  var forwardSlashes = !!match[2];\n  var otherSlashes = !!match[3];\n  var slashesCount = 0;\n  var rest;\n\n  if (forwardSlashes) {\n    if (otherSlashes) {\n      rest = match[2] + match[3] + match[4];\n      slashesCount = match[2].length + match[3].length;\n    } else {\n      rest = match[2] + match[4];\n      slashesCount = match[2].length;\n    }\n  } else {\n    if (otherSlashes) {\n      rest = match[3] + match[4];\n      slashesCount = match[3].length;\n    } else {\n      rest = match[4]\n    }\n  }\n\n  if (protocol === 'file:') {\n    if (slashesCount >= 2) {\n      rest = rest.slice(2);\n    }\n  } else if (isSpecial(protocol)) {\n    rest = match[4];\n  } else if (protocol) {\n    if (forwardSlashes) {\n      rest = rest.slice(2);\n    }\n  } else if (slashesCount >= 2 && isSpecial(location.protocol)) {\n    rest = match[4];\n  }\n\n  return {\n    protocol: protocol,\n    slashes: forwardSlashes || isSpecial(protocol),\n    slashesCount: slashesCount,\n    rest: rest\n  };\n}\n\n/**\n * Resolve a relative URL pathname against a base URL pathname.\n *\n * @param {String} relative Pathname of the relative URL.\n * @param {String} base Pathname of the base URL.\n * @return {String} Resolved pathname.\n * @private\n */\nfunction resolve(relative, base) {\n  if (relative === '') return base;\n\n  var path = (base || '/').split('/').slice(0, -1).concat(relative.split('/'))\n    , i = path.length\n    , last = path[i - 1]\n    , unshift = false\n    , up = 0;\n\n  while (i--) {\n    if (path[i] === '.') {\n      path.splice(i, 1);\n    } else if (path[i] === '..') {\n      path.splice(i, 1);\n      up++;\n    } else if (up) {\n      if (i === 0) unshift = true;\n      path.splice(i, 1);\n      up--;\n    }\n  }\n\n  if (unshift) path.unshift('');\n  if (last === '.' || last === '..') path.push('');\n\n  return path.join('/');\n}\n\n/**\n * The actual URL instance. Instead of returning an object we've opted-in to\n * create an actual constructor as it's much more memory efficient and\n * faster and it pleases my OCD.\n *\n * It is worth noting that we should not use `URL` as class name to prevent\n * clashes with the global URL instance that got introduced in browsers.\n *\n * @constructor\n * @param {String} address URL we want to parse.\n * @param {Object|String} [location] Location defaults for relative paths.\n * @param {Boolean|Function} [parser] Parser for the query string.\n * @private\n */\nfunction Url(address, location, parser) {\n  address = trimLeft(address);\n  address = address.replace(CRHTLF, '');\n\n  if (!(this instanceof Url)) {\n    return new Url(address, location, parser);\n  }\n\n  var relative, extracted, parse, instruction, index, key\n    , instructions = rules.slice()\n    , type = typeof location\n    , url = this\n    , i = 0;\n\n  //\n  // The following if statements allows this module two have compatibility with\n  // 2 different API:\n  //\n  // 1. Node.js's `url.parse` api which accepts a URL, boolean as arguments\n  //    where the boolean indicates that the query string should also be parsed.\n  //\n  // 2. The `URL` interface of the browser which accepts a URL, object as\n  //    arguments. The supplied object will be used as default values / fall-back\n  //    for relative paths.\n  //\n  if ('object' !== type && 'string' !== type) {\n    parser = location;\n    location = null;\n  }\n\n  if (parser && 'function' !== typeof parser) parser = qs.parse;\n\n  location = lolcation(location);\n\n  //\n  // Extract protocol information before running the instructions.\n  //\n  extracted = extractProtocol(address || '', location);\n  relative = !extracted.protocol && !extracted.slashes;\n  url.slashes = extracted.slashes || relative && location.slashes;\n  url.protocol = extracted.protocol || location.protocol || '';\n  address = extracted.rest;\n\n  //\n  // When the authority component is absent the URL starts with a path\n  // component.\n  //\n  if (\n    extracted.protocol === 'file:' && (\n      extracted.slashesCount !== 2 || windowsDriveLetter.test(address)) ||\n    (!extracted.slashes &&\n      (extracted.protocol ||\n        extracted.slashesCount < 2 ||\n        !isSpecial(url.protocol)))\n  ) {\n    instructions[3] = [/(.*)/, 'pathname'];\n  }\n\n  for (; i < instructions.length; i++) {\n    instruction = instructions[i];\n\n    if (typeof instruction === 'function') {\n      address = instruction(address, url);\n      continue;\n    }\n\n    parse = instruction[0];\n    key = instruction[1];\n\n    if (parse !== parse) {\n      url[key] = address;\n    } else if ('string' === typeof parse) {\n      index = parse === '@'\n        ? address.lastIndexOf(parse)\n        : address.indexOf(parse);\n\n      if (~index) {\n        if ('number' === typeof instruction[2]) {\n          url[key] = address.slice(0, index);\n          address = address.slice(index + instruction[2]);\n        } else {\n          url[key] = address.slice(index);\n          address = address.slice(0, index);\n        }\n      }\n    } else if ((index = parse.exec(address))) {\n      url[key] = index[1];\n      address = address.slice(0, index.index);\n    }\n\n    url[key] = url[key] || (\n      relative && instruction[3] ? location[key] || '' : ''\n    );\n\n    //\n    // Hostname, host and protocol should be lowercased so they can be used to\n    // create a proper `origin`.\n    //\n    if (instruction[4]) url[key] = url[key].toLowerCase();\n  }\n\n  //\n  // Also parse the supplied query string in to an object. If we're supplied\n  // with a custom parser as function use that instead of the default build-in\n  // parser.\n  //\n  if (parser) url.query = parser(url.query);\n\n  //\n  // If the URL is relative, resolve the pathname against the base URL.\n  //\n  if (\n      relative\n    && location.slashes\n    && url.pathname.charAt(0) !== '/'\n    && (url.pathname !== '' || location.pathname !== '')\n  ) {\n    url.pathname = resolve(url.pathname, location.pathname);\n  }\n\n  //\n  // Default to a / for pathname if none exists. This normalizes the URL\n  // to always have a /\n  //\n  if (url.pathname.charAt(0) !== '/' && isSpecial(url.protocol)) {\n    url.pathname = '/' + url.pathname;\n  }\n\n  //\n  // We should not add port numbers if they are already the default port number\n  // for a given protocol. As the host also contains the port number we're going\n  // override it with the hostname which contains no port number.\n  //\n  if (!required(url.port, url.protocol)) {\n    url.host = url.hostname;\n    url.port = '';\n  }\n\n  //\n  // Parse down the `auth` for the username and password.\n  //\n  url.username = url.password = '';\n\n  if (url.auth) {\n    index = url.auth.indexOf(':');\n\n    if (~index) {\n      url.username = url.auth.slice(0, index);\n      url.username = encodeURIComponent(decodeURIComponent(url.username));\n\n      url.password = url.auth.slice(index + 1);\n      url.password = encodeURIComponent(decodeURIComponent(url.password))\n    } else {\n      url.username = encodeURIComponent(decodeURIComponent(url.auth));\n    }\n\n    url.auth = url.password ? url.username +':'+ url.password : url.username;\n  }\n\n  url.origin = url.protocol !== 'file:' && isSpecial(url.protocol) && url.host\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  //\n  // The href is just the compiled result.\n  //\n  url.href = url.toString();\n}\n\n/**\n * This is convenience method for changing properties in the URL instance to\n * insure that they all propagate correctly.\n *\n * @param {String} part          Property we need to adjust.\n * @param {Mixed} value          The newly assigned value.\n * @param {Boolean|Function} fn  When setting the query, it will be the function\n *                               used to parse the query.\n *                               When setting the protocol, double slash will be\n *                               removed from the final url if it is true.\n * @returns {URL} URL instance for chaining.\n * @public\n */\nfunction set(part, value, fn) {\n  var url = this;\n\n  switch (part) {\n    case 'query':\n      if ('string' === typeof value && value.length) {\n        value = (fn || qs.parse)(value);\n      }\n\n      url[part] = value;\n      break;\n\n    case 'port':\n      url[part] = value;\n\n      if (!required(value, url.protocol)) {\n        url.host = url.hostname;\n        url[part] = '';\n      } else if (value) {\n        url.host = url.hostname +':'+ value;\n      }\n\n      break;\n\n    case 'hostname':\n      url[part] = value;\n\n      if (url.port) value += ':'+ url.port;\n      url.host = value;\n      break;\n\n    case 'host':\n      url[part] = value;\n\n      if (/:\\d+$/.test(value)) {\n        value = value.split(':');\n        url.port = value.pop();\n        url.hostname = value.join(':');\n      } else {\n        url.hostname = value;\n        url.port = '';\n      }\n\n      break;\n\n    case 'protocol':\n      url.protocol = value.toLowerCase();\n      url.slashes = !fn;\n      break;\n\n    case 'pathname':\n    case 'hash':\n      if (value) {\n        var char = part === 'pathname' ? '/' : '#';\n        url[part] = value.charAt(0) !== char ? char + value : value;\n      } else {\n        url[part] = value;\n      }\n      break;\n\n    case 'username':\n    case 'password':\n      url[part] = encodeURIComponent(value);\n      break;\n\n    case 'auth':\n      var index = value.indexOf(':');\n\n      if (~index) {\n        url.username = value.slice(0, index);\n        url.username = encodeURIComponent(decodeURIComponent(url.username));\n\n        url.password = value.slice(index + 1);\n        url.password = encodeURIComponent(decodeURIComponent(url.password));\n      } else {\n        url.username = encodeURIComponent(decodeURIComponent(value));\n      }\n  }\n\n  for (var i = 0; i < rules.length; i++) {\n    var ins = rules[i];\n\n    if (ins[4]) url[ins[1]] = url[ins[1]].toLowerCase();\n  }\n\n  url.auth = url.password ? url.username +':'+ url.password : url.username;\n\n  url.origin = url.protocol !== 'file:' && isSpecial(url.protocol) && url.host\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  url.href = url.toString();\n\n  return url;\n}\n\n/**\n * Transform the properties back in to a valid and full URL string.\n *\n * @param {Function} stringify Optional query stringify function.\n * @returns {String} Compiled version of the URL.\n * @public\n */\nfunction toString(stringify) {\n  if (!stringify || 'function' !== typeof stringify) stringify = qs.stringify;\n\n  var query\n    , url = this\n    , host = url.host\n    , protocol = url.protocol;\n\n  if (protocol && protocol.charAt(protocol.length - 1) !== ':') protocol += ':';\n\n  var result =\n    protocol +\n    ((url.protocol && url.slashes) || isSpecial(url.protocol) ? '//' : '');\n\n  if (url.username) {\n    result += url.username;\n    if (url.password) result += ':'+ url.password;\n    result += '@';\n  } else if (url.password) {\n    result += ':'+ url.password;\n    result += '@';\n  } else if (\n    url.protocol !== 'file:' &&\n    isSpecial(url.protocol) &&\n    !host &&\n    url.pathname !== '/'\n  ) {\n    //\n    // Add back the empty userinfo, otherwise the original invalid URL\n    // might be transformed into a valid one with `url.pathname` as host.\n    //\n    result += '@';\n  }\n\n  //\n  // Trailing colon is removed from `url.host` when it is parsed. If it still\n  // ends with a colon, then add back the trailing colon that was removed. This\n  // prevents an invalid URL from being transformed into a valid one.\n  //\n  if (host[host.length - 1] === ':') host += ':';\n  result += host + url.pathname;\n\n  query = 'object' === typeof url.query ? stringify(url.query) : url.query;\n  if (query) result += '?' !== query.charAt(0) ? '?'+ query : query;\n\n  if (url.hash) result += url.hash;\n\n  return result;\n}\n\nUrl.prototype = { set: set, toString: toString };\n\n//\n// Expose the URL parser and some additional properties that might be useful for\n// others or testing.\n//\nUrl.extractProtocol = extractProtocol;\nUrl.location = lolcation;\nUrl.trimLeft = trimLeft;\nUrl.qs = qs;\n\nmodule.exports = Url;\n","import MockWebSocket from \"./websocket\";\n\ntype Message = Uint8Array;\nconst NativeWebSocket = window.WebSocket;\n\ntype MessageListener = (message: Message) => void;\n\ntype Receive = (message: Message) => void;\n\nconst interceptedHosts = new Map<string, Set<MessageListener>>();\nconst messageReceiver = new Map<string, Receive>();\n\nconst WebsocketProxy = new Proxy(NativeWebSocket, {\n  construct(target, args: [string]) {\n    console.log(\"WebSocketProxy constructed with args:\", args);\n    console.log(\"intercepted hosts\", interceptedHosts);\n    const url = args[0];\n    const host = new URL(url).host;\n    const instance = interceptedHosts.has(host) ? new MockWebSocket(url) : new target(...args);\n\n    messageReceiver.set(host, (message: Message) => {\n      const messageEvent = new MessageEvent(\"message\", {\n        data: message,\n        origin: url,\n      }) as any;\n      instance.dispatchEvent(messageEvent);\n    });\n\n    const proxy = new Proxy(instance, {\n      get(obj: any, prop) {\n        const value = obj[prop];\n        if (typeof value === \"function\") {\n          return function (...args: any[]) {\n            const listeners = interceptedHosts.get(host);\n            if (listeners && prop === \"send\") {\n              for (const listener of listeners) {\n                listener(args[0]);\n                return;\n              }\n            }\n            return value.apply(obj, args);\n          };\n        }\n        return value;\n      },\n      set(obj, prop, value) {\n        obj[prop] = value;\n        return true;\n      },\n    });\n\n    return proxy;\n  },\n});\n\ntype LocalWebsocketServer = {\n  on: (messageType: \"message\", handler: (message: Message) => void) => void;\n  send: (message: Message) => void;\n};\n\nfunction intercept(host: string): LocalWebsocketServer {\n  window.WebSocket = WebsocketProxy;\n  interceptedHosts.set(host, new Set());\n  return {\n    on: (messageType, listener) => {\n      if (messageType === \"message\") {\n        const listeners = interceptedHosts.get(host);\n        listeners?.add(listener);\n      }\n    },\n    send: (message) => {\n      const receiver = messageReceiver.get(host);\n      if (receiver) receiver(message);\n    },\n  };\n}\n\nexport { intercept };\n","/*\n * This delay allows the thread to finish assigning its on* methods\n * before invoking the delay callback. This is purely a timing hack.\n * http://geekabyte.blogspot.com/2014/01/javascript-effect-of-setting-settimeout.html\n *\n * @param {callback: function} the callback which will be invoked after the timeout\n * @parma {context: object} the context in which to invoke the function\n */\nexport default function delay(callback, context) {\n  setTimeout(timeoutContext => callback.call(timeoutContext), 4, context);\n}\n","export default function log(method, message) {\n  /* eslint-disable no-console */\n  if (typeof process !== 'undefined' && process.env.NODE_ENV !== 'test') {\n    console[method].call(null, message);\n  }\n  /* eslint-enable no-console */\n}\n","export function reject(array = [], callback) {\n  const results = [];\n  array.forEach(itemInArray => {\n    if (!callback(itemInArray)) {\n      results.push(itemInArray);\n    }\n  });\n\n  return results;\n}\n\nexport function filter(array = [], callback) {\n  const results = [];\n  array.forEach(itemInArray => {\n    if (callback(itemInArray)) {\n      results.push(itemInArray);\n    }\n  });\n\n  return results;\n}\n","import { reject, filter } from '../helpers/array-helpers';\n\n/*\n * EventTarget is an interface implemented by objects that can\n * receive events and may have listeners for them.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget\n */\nclass EventTarget {\n  constructor() {\n    this.listeners = {};\n  }\n\n  /*\n   * Ties a listener function to an event type which can later be invoked via the\n   * dispatchEvent method.\n   *\n   * @param {string} type - the type of event (ie: 'open', 'message', etc.)\n   * @param {function} listener - callback function to invoke when an event is dispatched matching the type\n   * @param {boolean} useCapture - N/A TODO: implement useCapture functionality\n   */\n  addEventListener(type, listener /* , useCapture */) {\n    if (typeof listener === 'function') {\n      if (!Array.isArray(this.listeners[type])) {\n        this.listeners[type] = [];\n      }\n\n      // Only add the same function once\n      if (filter(this.listeners[type], item => item === listener).length === 0) {\n        this.listeners[type].push(listener);\n      }\n    }\n  }\n\n  /*\n   * Removes the listener so it will no longer be invoked via the dispatchEvent method.\n   *\n   * @param {string} type - the type of event (ie: 'open', 'message', etc.)\n   * @param {function} listener - callback function to invoke when an event is dispatched matching the type\n   * @param {boolean} useCapture - N/A TODO: implement useCapture functionality\n   */\n  removeEventListener(type, removingListener /* , useCapture */) {\n    const arrayOfListeners = this.listeners[type];\n    this.listeners[type] = reject(arrayOfListeners, listener => listener === removingListener);\n  }\n\n  /*\n   * Invokes all listener functions that are listening to the given event.type property. Each\n   * listener will be passed the event as the first argument.\n   *\n   * @param {object} event - event object which will be passed to all listeners of the event.type property\n   */\n  dispatchEvent(event, ...customArguments) {\n    const eventName = event.type;\n    const listeners = this.listeners[eventName];\n\n    if (!Array.isArray(listeners)) {\n      return false;\n    }\n\n    listeners.forEach(listener => {\n      if (customArguments.length > 0) {\n        listener.apply(this, customArguments);\n      } else {\n        listener.call(this, event);\n      }\n    });\n\n    return true;\n  }\n}\n\nexport default EventTarget;\n","import { reject } from './helpers/array-helpers';\n\nfunction trimQueryPartFromURL(url) {\n  const queryIndex = url.indexOf('?');\n  return queryIndex >= 0 ? url.slice(0, queryIndex) : url;\n}\n\n/*\n * The network bridge is a way for the mock websocket object to 'communicate' with\n * all available servers. This is a singleton object so it is important that you\n * clean up urlMap whenever you are finished.\n */\nclass NetworkBridge {\n  constructor() {\n    this.urlMap = {};\n  }\n\n  /*\n   * Attaches a websocket object to the urlMap hash so that it can find the server\n   * it is connected to and the server in turn can find it.\n   *\n   * @param {object} websocket - websocket object to add to the urlMap hash\n   * @param {string} url\n   */\n  attachWebSocket(websocket, url) {\n    const serverURL = trimQueryPartFromURL(url);\n    const connectionLookup = this.urlMap[serverURL];\n\n    if (connectionLookup && connectionLookup.server && connectionLookup.websockets.indexOf(websocket) === -1) {\n      connectionLookup.websockets.push(websocket);\n      return connectionLookup.server;\n    }\n  }\n\n  /*\n   * Attaches a websocket to a room\n   */\n  addMembershipToRoom(websocket, room) {\n    const connectionLookup = this.urlMap[trimQueryPartFromURL(websocket.url)];\n\n    if (connectionLookup && connectionLookup.server && connectionLookup.websockets.indexOf(websocket) !== -1) {\n      if (!connectionLookup.roomMemberships[room]) {\n        connectionLookup.roomMemberships[room] = [];\n      }\n\n      connectionLookup.roomMemberships[room].push(websocket);\n    }\n  }\n\n  /*\n   * Attaches a server object to the urlMap hash so that it can find a websockets\n   * which are connected to it and so that websockets can in turn can find it.\n   *\n   * @param {object} server - server object to add to the urlMap hash\n   * @param {string} url\n   */\n  attachServer(server, url) {\n    const serverUrl = trimQueryPartFromURL(url);\n    const connectionLookup = this.urlMap[serverUrl];\n\n    if (!connectionLookup) {\n      this.urlMap[serverUrl] = {\n        server,\n        websockets: [],\n        roomMemberships: {}\n      };\n\n      return server;\n    }\n  }\n\n  /*\n   * Finds the server which is 'running' on the given url.\n   *\n   * @param {string} url - the url to use to find which server is running on it\n   */\n  serverLookup(url) {\n    const serverURL = trimQueryPartFromURL(url);\n    const connectionLookup = this.urlMap[serverURL];\n\n    if (connectionLookup) {\n      return connectionLookup.server;\n    }\n  }\n\n  /*\n   * Finds all websockets which is 'listening' on the given url.\n   *\n   * @param {string} url - the url to use to find all websockets which are associated with it\n   * @param {string} room - if a room is provided, will only return sockets in this room\n   * @param {class} broadcaster - socket that is broadcasting and is to be excluded from the lookup\n   */\n  websocketsLookup(url, room, broadcaster) {\n    const serverURL = trimQueryPartFromURL(url);\n    let websockets;\n    const connectionLookup = this.urlMap[serverURL];\n\n    websockets = connectionLookup ? connectionLookup.websockets : [];\n\n    if (room) {\n      const members = connectionLookup.roomMemberships[room];\n      websockets = members || [];\n    }\n\n    return broadcaster ? websockets.filter(websocket => websocket !== broadcaster) : websockets;\n  }\n\n  /*\n   * Removes the entry associated with the url.\n   *\n   * @param {string} url\n   */\n  removeServer(url) {\n    delete this.urlMap[trimQueryPartFromURL(url)];\n  }\n\n  /*\n   * Removes the individual websocket from the map of associated websockets.\n   *\n   * @param {object} websocket - websocket object to remove from the url map\n   * @param {string} url\n   */\n  removeWebSocket(websocket, url) {\n    const serverURL = trimQueryPartFromURL(url);\n    const connectionLookup = this.urlMap[serverURL];\n\n    if (connectionLookup) {\n      connectionLookup.websockets = reject(connectionLookup.websockets, socket => socket === websocket);\n    }\n  }\n\n  /*\n   * Removes a websocket from a room\n   */\n  removeMembershipFromRoom(websocket, room) {\n    const connectionLookup = this.urlMap[trimQueryPartFromURL(websocket.url)];\n    const memberships = connectionLookup.roomMemberships[room];\n\n    if (connectionLookup && memberships !== null) {\n      connectionLookup.roomMemberships[room] = reject(memberships, socket => socket === websocket);\n    }\n  }\n}\n\nexport default new NetworkBridge(); // Note: this is a singleton\n","/*\n * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent\n */\nexport const CLOSE_CODES = {\n  CLOSE_NORMAL: 1000,\n  CLOSE_GOING_AWAY: 1001,\n  CLOSE_PROTOCOL_ERROR: 1002,\n  CLOSE_UNSUPPORTED: 1003,\n  CLOSE_NO_STATUS: 1005,\n  CLOSE_ABNORMAL: 1006,\n  UNSUPPORTED_DATA: 1007,\n  POLICY_VIOLATION: 1008,\n  CLOSE_TOO_LARGE: 1009,\n  MISSING_EXTENSION: 1010,\n  INTERNAL_ERROR: 1011,\n  SERVICE_RESTART: 1012,\n  TRY_AGAIN_LATER: 1013,\n  TLS_HANDSHAKE: 1015\n};\n\nexport const ERROR_PREFIX = {\n  CONSTRUCTOR_ERROR: \"Failed to construct 'WebSocket':\",\n  CLOSE_ERROR: \"Failed to execute 'close' on 'WebSocket':\",\n  EVENT: {\n    CONSTRUCT: \"Failed to construct 'Event':\",\n    MESSAGE: \"Failed to construct 'MessageEvent':\",\n    CLOSE: \"Failed to construct 'CloseEvent':\"\n  }\n};\n","export default class EventPrototype {\n  // Noops\n  stopPropagation() {}\n  stopImmediatePropagation() {}\n\n  // if no arguments are passed then the type is set to \"undefined\" on\n  // chrome and safari.\n  initEvent(type = 'undefined', bubbles = false, cancelable = false) {\n    this.type = `${type}`;\n    this.bubbles = Boolean(bubbles);\n    this.cancelable = Boolean(cancelable);\n  }\n}\n","import EventPrototype from './prototype';\nimport { ERROR_PREFIX } from '../constants';\n\nexport default class Event extends EventPrototype {\n  constructor(type, eventInitConfig = {}) {\n    super();\n\n    if (!type) {\n      throw new TypeError(`${ERROR_PREFIX.EVENT_ERROR} 1 argument required, but only 0 present.`);\n    }\n\n    if (typeof eventInitConfig !== 'object') {\n      throw new TypeError(`${ERROR_PREFIX.EVENT_ERROR} parameter 2 ('eventInitDict') is not an object.`);\n    }\n\n    const { bubbles, cancelable } = eventInitConfig;\n\n    this.type = `${type}`;\n    this.timeStamp = Date.now();\n    this.target = null;\n    this.srcElement = null;\n    this.returnValue = true;\n    this.isTrusted = false;\n    this.eventPhase = 0;\n    this.defaultPrevented = false;\n    this.currentTarget = null;\n    this.cancelable = cancelable ? Boolean(cancelable) : false;\n    this.cancelBubble = false;\n    this.bubbles = bubbles ? Boolean(bubbles) : false;\n  }\n}\n","import EventPrototype from './prototype';\nimport { ERROR_PREFIX } from '../constants';\n\nexport default class MessageEvent extends EventPrototype {\n  constructor(type, eventInitConfig = {}) {\n    super();\n\n    if (!type) {\n      throw new TypeError(`${ERROR_PREFIX.EVENT.MESSAGE} 1 argument required, but only 0 present.`);\n    }\n\n    if (typeof eventInitConfig !== 'object') {\n      throw new TypeError(`${ERROR_PREFIX.EVENT.MESSAGE} parameter 2 ('eventInitDict') is not an object`);\n    }\n\n    const { bubbles, cancelable, data, origin, lastEventId, ports } = eventInitConfig;\n\n    this.type = `${type}`;\n    this.timeStamp = Date.now();\n    this.target = null;\n    this.srcElement = null;\n    this.returnValue = true;\n    this.isTrusted = false;\n    this.eventPhase = 0;\n    this.defaultPrevented = false;\n    this.currentTarget = null;\n    this.cancelable = cancelable ? Boolean(cancelable) : false;\n    this.canncelBubble = false;\n    this.bubbles = bubbles ? Boolean(bubbles) : false;\n    this.origin = `${origin}`;\n    this.ports = typeof ports === 'undefined' ? null : ports;\n    this.data = typeof data === 'undefined' ? null : data;\n    this.lastEventId = `${lastEventId || ''}`;\n  }\n}\n","import EventPrototype from './prototype';\nimport { ERROR_PREFIX } from '../constants';\n\nexport default class CloseEvent extends EventPrototype {\n  constructor(type, eventInitConfig = {}) {\n    super();\n\n    if (!type) {\n      throw new TypeError(`${ERROR_PREFIX.EVENT.CLOSE} 1 argument required, but only 0 present.`);\n    }\n\n    if (typeof eventInitConfig !== 'object') {\n      throw new TypeError(`${ERROR_PREFIX.EVENT.CLOSE} parameter 2 ('eventInitDict') is not an object`);\n    }\n\n    const { bubbles, cancelable, code, reason, wasClean } = eventInitConfig;\n\n    this.type = `${type}`;\n    this.timeStamp = Date.now();\n    this.target = null;\n    this.srcElement = null;\n    this.returnValue = true;\n    this.isTrusted = false;\n    this.eventPhase = 0;\n    this.defaultPrevented = false;\n    this.currentTarget = null;\n    this.cancelable = cancelable ? Boolean(cancelable) : false;\n    this.cancelBubble = false;\n    this.bubbles = bubbles ? Boolean(bubbles) : false;\n    this.code = typeof code === 'number' ? parseInt(code, 10) : 0;\n    this.reason = `${reason || ''}`;\n    this.wasClean = wasClean ? Boolean(wasClean) : false;\n  }\n}\n","import Event from './event';\nimport MessageEvent from './message';\nimport CloseEvent from './close';\nimport { CLOSE_CODES } from '../constants';\n\n/*\n * Creates an Event object and extends it to allow full modification of\n * its properties.\n *\n * @param {object} config - within config you will need to pass type and optionally target\n */\nfunction createEvent(config) {\n  const { type, target } = config;\n  const eventObject = new Event(type);\n\n  if (target) {\n    eventObject.target = target;\n    eventObject.srcElement = target;\n    eventObject.currentTarget = target;\n  }\n\n  return eventObject;\n}\n\n/*\n * Creates a MessageEvent object and extends it to allow full modification of\n * its properties.\n *\n * @param {object} config - within config: type, origin, data and optionally target\n */\nfunction createMessageEvent(config) {\n  const { type, origin, data, target } = config;\n  const messageEvent = new MessageEvent(type, {\n    data,\n    origin\n  });\n\n  if (target) {\n    messageEvent.target = target;\n    messageEvent.srcElement = target;\n    messageEvent.currentTarget = target;\n  }\n\n  return messageEvent;\n}\n\n/*\n * Creates a CloseEvent object and extends it to allow full modification of\n * its properties.\n *\n * @param {object} config - within config: type and optionally target, code, and reason\n */\nfunction createCloseEvent(config) {\n  const { code, reason, type, target } = config;\n  let { wasClean } = config;\n\n  if (!wasClean) {\n    wasClean = code === CLOSE_CODES.CLOSE_NORMAL || code === CLOSE_CODES.CLOSE_NO_STATUS;\n  }\n\n  const closeEvent = new CloseEvent(type, {\n    code,\n    reason,\n    wasClean\n  });\n\n  if (target) {\n    closeEvent.target = target;\n    closeEvent.srcElement = target;\n    closeEvent.currentTarget = target;\n  }\n\n  return closeEvent;\n}\n\nexport { createEvent, createMessageEvent, createCloseEvent };\n","import WebSocket from '../websocket';\nimport delay from '../helpers/delay';\nimport networkBridge from '../network-bridge';\nimport { createCloseEvent, createEvent } from '../event/factory';\n\nexport function closeWebSocketConnection(context, code, reason) {\n  context.readyState = WebSocket.CLOSING;\n\n  const server = networkBridge.serverLookup(context.url);\n  const closeEvent = createCloseEvent({\n    type: 'close',\n    target: context.target,\n    code,\n    reason\n  });\n\n  delay(() => {\n    networkBridge.removeWebSocket(context, context.url);\n\n    context.readyState = WebSocket.CLOSED;\n    context.dispatchEvent(closeEvent);\n\n    if (server) {\n      server.dispatchEvent(closeEvent, server);\n    }\n  }, context);\n}\n\nexport function failWebSocketConnection(context, code, reason) {\n  context.readyState = WebSocket.CLOSING;\n\n  const server = networkBridge.serverLookup(context.url);\n  const closeEvent = createCloseEvent({\n    type: 'close',\n    target: context.target,\n    code,\n    reason,\n    wasClean: false\n  });\n\n  const errorEvent = createEvent({\n    type: 'error',\n    target: context.target\n  });\n\n  delay(() => {\n    networkBridge.removeWebSocket(context, context.url);\n\n    context.readyState = WebSocket.CLOSED;\n    context.dispatchEvent(errorEvent);\n    context.dispatchEvent(closeEvent);\n\n    if (server) {\n      server.dispatchEvent(closeEvent, server);\n    }\n  }, context);\n}\n","export default function normalizeSendData(data) {\n  if (Object.prototype.toString.call(data) !== '[object Blob]' && !(data instanceof ArrayBuffer)) {\n    data = String(data);\n  }\n\n  return data;\n}\n","import { CLOSE_CODES } from '../constants';\nimport { closeWebSocketConnection } from '../algorithms/close';\nimport normalizeSendData from './normalize-send';\nimport { createMessageEvent } from '../event/factory';\n\nconst proxies = new WeakMap();\n\nexport default function proxyFactory(target) {\n  if (proxies.has(target)) {\n    return proxies.get(target);\n  }\n\n  const proxy = new Proxy(target, {\n    get(obj, prop) {\n      if (prop === 'close') {\n        return function close(options = {}) {\n          const code = options.code || CLOSE_CODES.CLOSE_NORMAL;\n          const reason = options.reason || '';\n\n          closeWebSocketConnection(proxy, code, reason);\n        };\n      }\n\n      if (prop === 'send') {\n        return function send(data) {\n          data = normalizeSendData(data);\n\n          target.dispatchEvent(\n            createMessageEvent({\n              type: 'message',\n              data,\n              origin: this.url,\n              target\n            })\n          );\n        };\n      }\n\n      const toSocketName = type => (type === 'message' ? `server::${type}` : type);\n      if (prop === 'on') {\n        return function onWrapper(type, cb) {\n          target.addEventListener(toSocketName(type), cb);\n        };\n      }\n      if (prop === 'off') {\n        return function offWrapper(type, cb) {\n          target.removeEventListener(toSocketName(type), cb);\n        };\n      }\n\n      if (prop === 'target') {\n        return target;\n      }\n\n      return obj[prop];\n    }\n  });\n  proxies.set(target, proxy);\n\n  return proxy;\n}\n","export default function lengthInUtf8Bytes(str) {\n  // Matches only the 10.. bytes that are non-initial characters in a multi-byte sequence.\n  const m = encodeURIComponent(str).match(/%[89ABab]/g);\n  return str.length + (m ? m.length : 0);\n}\n","import URL from 'url-parse';\nimport { ERROR_PREFIX } from '../constants';\n\nexport default function urlVerification(url) {\n  const urlRecord = new URL(url);\n  const { pathname, protocol, hash } = urlRecord;\n\n  if (!url) {\n    throw new TypeError(`${ERROR_PREFIX.CONSTRUCTOR_ERROR} 1 argument required, but only 0 present.`);\n  }\n\n  if (!pathname) {\n    urlRecord.pathname = '/';\n  }\n\n  if (protocol === '') {\n    throw new SyntaxError(`${ERROR_PREFIX.CONSTRUCTOR_ERROR} The URL '${urlRecord.toString()}' is invalid.`);\n  }\n\n  if (protocol !== 'ws:' && protocol !== 'wss:') {\n    throw new SyntaxError(\n      `${ERROR_PREFIX.CONSTRUCTOR_ERROR} The URL's scheme must be either 'ws' or 'wss'. '${protocol}' is not allowed.`\n    );\n  }\n\n  if (hash !== '') {\n    /* eslint-disable max-len */\n    throw new SyntaxError(\n      `${\n        ERROR_PREFIX.CONSTRUCTOR_ERROR\n      } The URL contains a fragment identifier ('${hash}'). Fragment identifiers are not allowed in WebSocket URLs.`\n    );\n    /* eslint-enable max-len */\n  }\n\n  return urlRecord.toString();\n}\n","import { ERROR_PREFIX } from '../constants';\n\nexport default function protocolVerification(protocols = []) {\n  if (!Array.isArray(protocols) && typeof protocols !== 'string') {\n    throw new SyntaxError(`${ERROR_PREFIX.CONSTRUCTOR_ERROR} The subprotocol '${protocols.toString()}' is invalid.`);\n  }\n\n  if (typeof protocols === 'string') {\n    protocols = [protocols];\n  }\n\n  const uniq = protocols\n    .map(p => ({ count: 1, protocol: p }))\n    .reduce((a, b) => {\n      a[b.protocol] = (a[b.protocol] || 0) + b.count;\n      return a;\n    }, {});\n\n  const duplicates = Object.keys(uniq).filter(a => uniq[a] > 1);\n\n  if (duplicates.length > 0) {\n    throw new SyntaxError(`${ERROR_PREFIX.CONSTRUCTOR_ERROR} The subprotocol '${duplicates[0]}' is duplicated.`);\n  }\n\n  return protocols;\n}\n","import delay from './helpers/delay';\nimport logger from './helpers/logger';\nimport EventTarget from './event/target';\nimport networkBridge from './network-bridge';\nimport proxyFactory from './helpers/proxy-factory';\nimport lengthInUtf8Bytes from './helpers/byte-length';\nimport { CLOSE_CODES, ERROR_PREFIX } from './constants';\nimport urlVerification from './helpers/url-verification';\nimport normalizeSendData from './helpers/normalize-send';\nimport protocolVerification from './helpers/protocol-verification';\nimport { createEvent, createMessageEvent, createCloseEvent } from './event/factory';\nimport { closeWebSocketConnection, failWebSocketConnection } from './algorithms/close';\n\n/*\n * The main websocket class which is designed to mimick the native WebSocket class as close\n * as possible.\n *\n * https://html.spec.whatwg.org/multipage/web-sockets.html\n */\nclass WebSocket extends EventTarget {\n  constructor(url, protocols) {\n    super();\n\n    this._onopen = null;\n    this._onmessage = null;\n    this._onerror = null;\n    this._onclose = null;\n\n    this.url = urlVerification(url);\n    protocols = protocolVerification(protocols);\n    this.protocol = protocols[0] || '';\n\n    this.binaryType = 'blob';\n    this.readyState = WebSocket.CONNECTING;\n\n    const client = proxyFactory(this);\n    const server = networkBridge.attachWebSocket(client, this.url);\n\n    /*\n     * This delay is needed so that we dont trigger an event before the callbacks have been\n     * setup. For example:\n     *\n     * var socket = new WebSocket('ws://localhost');\n     *\n     * If we dont have the delay then the event would be triggered right here and this is\n     * before the onopen had a chance to register itself.\n     *\n     * socket.onopen = () => { // this would never be called };\n     *\n     * and with the delay the event gets triggered here after all of the callbacks have been\n     * registered :-)\n     */\n    delay(function delayCallback() {\n      if (this.readyState !== WebSocket.CONNECTING) {\n        return;\n      }\n      if (server) {\n        if (\n          server.options.verifyClient &&\n          typeof server.options.verifyClient === 'function' &&\n          !server.options.verifyClient()\n        ) {\n          this.readyState = WebSocket.CLOSED;\n\n          logger(\n            'error',\n            `WebSocket connection to '${this.url}' failed: HTTP Authentication failed; no valid credentials available`\n          );\n\n          networkBridge.removeWebSocket(client, this.url);\n          this.dispatchEvent(createEvent({ type: 'error', target: this }));\n          this.dispatchEvent(createCloseEvent({ type: 'close', target: this, code: CLOSE_CODES.CLOSE_NORMAL }));\n        } else {\n          if (server.options.selectProtocol && typeof server.options.selectProtocol === 'function') {\n            const selectedProtocol = server.options.selectProtocol(protocols);\n            const isFilled = selectedProtocol !== '';\n            const isRequested = protocols.indexOf(selectedProtocol) !== -1;\n            if (isFilled && !isRequested) {\n              this.readyState = WebSocket.CLOSED;\n\n              logger('error', `WebSocket connection to '${this.url}' failed: Invalid Sub-Protocol`);\n\n              networkBridge.removeWebSocket(client, this.url);\n              this.dispatchEvent(createEvent({ type: 'error', target: this }));\n              this.dispatchEvent(createCloseEvent({ type: 'close', target: this, code: CLOSE_CODES.CLOSE_NORMAL }));\n              return;\n            }\n            this.protocol = selectedProtocol;\n          }\n          this.readyState = WebSocket.OPEN;\n          this.dispatchEvent(createEvent({ type: 'open', target: this }));\n          server.dispatchEvent(createEvent({ type: 'connection' }), client);\n        }\n      } else {\n        // Open a mock websocket without server connection\n        this.readyState = WebSocket.OPEN;\n        this.dispatchEvent(createEvent({ type: 'open', target: this }));\n      }\n    }, this);\n  }\n\n  get onopen() {\n    return this._onopen;\n  }\n\n  get onmessage() {\n    return this._onmessage;\n  }\n\n  get onclose() {\n    return this._onclose;\n  }\n\n  get onerror() {\n    return this._onerror;\n  }\n\n  set onopen(listener) {\n    this.removeEventListener('open', this._onopen);\n    this._onopen = listener;\n    this.addEventListener('open', listener);\n  }\n\n  set onmessage(listener) {\n    this.removeEventListener('message', this._onmessage);\n    this._onmessage = listener;\n    this.addEventListener('message', listener);\n  }\n\n  set onclose(listener) {\n    this.removeEventListener('close', this._onclose);\n    this._onclose = listener;\n    this.addEventListener('close', listener);\n  }\n\n  set onerror(listener) {\n    this.removeEventListener('error', this._onerror);\n    this._onerror = listener;\n    this.addEventListener('error', listener);\n  }\n\n  send(data) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      // TODO: node>=17 replace with DOMException\n      throw new Error(\"Failed to execute 'send' on 'WebSocket': Still in CONNECTING state\");\n    }\n\n    // TODO: handle bufferedAmount\n\n    const messageEvent = createMessageEvent({\n      type: 'server::message',\n      origin: this.url,\n      data: normalizeSendData(data)\n    });\n\n    const server = networkBridge.serverLookup(this.url);\n\n    if (server) {\n      delay(() => {\n        this.dispatchEvent(messageEvent, data);\n      }, server);\n    }\n  }\n\n  close(code, reason) {\n    if (code !== undefined) {\n      if (typeof code !== 'number' || (code !== 1000 && (code < 3000 || code > 4999))) {\n        throw new TypeError(\n          `${ERROR_PREFIX.CLOSE_ERROR} The code must be either 1000, or between 3000 and 4999. ${code} is neither.`\n        );\n      }\n    }\n\n    if (reason !== undefined) {\n      const length = lengthInUtf8Bytes(reason);\n\n      if (length > 123) {\n        throw new SyntaxError(`${ERROR_PREFIX.CLOSE_ERROR} The message must not be greater than 123 bytes.`);\n      }\n    }\n\n    if (this.readyState === WebSocket.CLOSING || this.readyState === WebSocket.CLOSED) {\n      return;\n    }\n\n    const client = proxyFactory(this);\n    if (this.readyState === WebSocket.CONNECTING) {\n      failWebSocketConnection(client, code || CLOSE_CODES.CLOSE_ABNORMAL, reason);\n    } else {\n      closeWebSocketConnection(client, code || CLOSE_CODES.CLOSE_NO_STATUS, reason);\n    }\n  }\n}\n\nWebSocket.CONNECTING = 0;\nWebSocket.prototype.CONNECTING = WebSocket.CONNECTING;\nWebSocket.OPEN = 1;\nWebSocket.prototype.OPEN = WebSocket.OPEN;\nWebSocket.CLOSING = 2;\nWebSocket.prototype.CLOSING = WebSocket.CLOSING;\nWebSocket.CLOSED = 3;\nWebSocket.prototype.CLOSED = WebSocket.CLOSED;\n\nexport default WebSocket;\n"],"mappings":"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","names":["exports","module","exports","exports","module","MessageEvent","MessageEvent","URL","args"]}